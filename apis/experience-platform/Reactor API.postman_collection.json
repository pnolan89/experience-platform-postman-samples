{
	"info": {
		"_postman_id": "7c2690c0-d413-5835-beec-ab90cb9b3f87",
		"name": "Reactor API",
		"description": "The Reactor API is used to programmatically manage resources and develop tag extensions in Adobe Experience Platform.\n\nRelated documentation:\n  * [Tags overview and UI documentation](https://adobe.com/go/launch_help_en)\n  * [Reactor API documentation](https://adobe.com/go/reactor-api-overview)\n\nAPI paths:\n  * Reactor Gateway URL: https://<span>reactor.adobe.io\n  * Example of a complete path for making a call to \"/properties\": https://<span>reactor.adobe.io/properties\n\nRequired headers:\n  * All calls require the headers `Authorization`, `x-gw-ims-org-id`, and `x-api-key`. For more information on how to obtain these values, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).\n  * All GET requests to the Reactor API require an `Accept` header to determine what data is returned by the system. In most cases, this value will be \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").\n  * All requests with a payload in the request body (such as POST, PUT, and PATCH calls) must include the header `Content-Type`. The specific `Content-Type` value for each call is provided in the parameters sections in the endpoints listed below.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Companies",
			"item": [
				{
					"name": "Retrieve a list of companies.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "1807c5aa-51e9-51c9-ae97-d7f78a0e197d",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/companies?created_at={{created_at}}&updated_at={{updated_at}}&name={{name}}&org_id={{org_id}}&token={{token}}",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"companies"
							],
							"query": [
								{
									"key": "created_at",
									"value": "{{created_at}}"
								},
								{
									"key": "updated_at",
									"value": "{{updated_at}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "org_id",
									"value": "{{org_id}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Look up a company by ID.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "83fd3fc4-82a2-5d18-aa72-bea563bb6bc5",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/companies/:COMPANY_ID",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"companies",
								":COMPANY_ID"
							],
							"variable": [
								{
									"value": "{{COMPANY_ID}}",
									"id": "COMPANY_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve a list of properties owned by a company.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "edea903f-e9f5-5ed9-a589-eb1e7d62e4fb",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/companies/:COMPANY_ID/properties?app_id={{app_id}}&created_at={{created_at}}&updated_at={{updated_at}}&copying={{copying}}&enabled={{enabled}}&platform={{platform}}&token={{token}}",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"companies",
								":COMPANY_ID",
								"properties"
							],
							"query": [
								{
									"key": "app_id",
									"value": "{{app_id}}"
								},
								{
									"key": "created_at",
									"value": "{{created_at}}"
								},
								{
									"key": "updated_at",
									"value": "{{updated_at}}"
								},
								{
									"key": "copying",
									"value": "{{copying}}"
								},
								{
									"key": "enabled",
									"value": "{{enabled}}"
								},
								{
									"key": "platform",
									"value": "{{platform}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							],
							"variable": [
								{
									"value": "{{COMPANY_ID}}",
									"id": "COMPANY_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new property for a company.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "1b1e6f8f-e447-5907-a8a5-0af22f07904b",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://reactor.adobe.io/companies/:COMPANY_ID/properties",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"companies",
								":COMPANY_ID",
								"properties"
							],
							"variable": [
								{
									"value": "{{COMPANY_ID}}",
									"id": "COMPANY_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve a list of app configurations owned by a company.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "0671bf20-cbf7-5268-ad15-1851b22cad9f",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/companies/:COMPANY_ID/app_configurations?app_id={{app_id}}&created_at={{created_at}}&updated_at={{updated_at}}&key_type={{key_type}}&messaging_service={{messaging_service}}&name={{name}}&platform={{platform}}",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"companies",
								":COMPANY_ID",
								"app_configurations"
							],
							"query": [
								{
									"key": "app_id",
									"value": "{{app_id}}"
								},
								{
									"key": "created_at",
									"value": "{{created_at}}"
								},
								{
									"key": "updated_at",
									"value": "{{updated_at}}"
								},
								{
									"key": "key_type",
									"value": "{{key_type}}"
								},
								{
									"key": "messaging_service",
									"value": "{{messaging_service}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "platform",
									"value": "{{platform}}"
								}
							],
							"variable": [
								{
									"value": "{{COMPANY_ID}}",
									"id": "COMPANY_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new app configuration for a company.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "2f592881-8ac9-58db-bc03-1dc49341543b",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://reactor.adobe.io/companies/:COMPANY_ID/app_configurations",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"companies",
								":COMPANY_ID",
								"app_configurations"
							],
							"variable": [
								{
									"value": "{{COMPANY_ID}}",
									"id": "COMPANY_ID"
								}
							]
						}
					},
					"response": []
				}
			],
			"_postman_id": "de768cb5-e9dd-5323-8506-0b5a28fc27f8",
			"description": "A company represents the organization of a tags user, typically a business. These companies match 1:1 with IMS Organization IDs. API users will only have visibility into the companies to which they have access. Nearly all API usage is performed using an Adobe I/O integration which is scoped to a single IMS Org, and therefore the /companies endpoint is not a major part of most workflows. Most use cases start with a property instead."
		},
		{
			"name": "Properties",
			"item": [
				{
					"name": "Look up a property by ID.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "e669d42d-4a7e-56b1-a605-84802909ed96",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/properties/:PROPERTY_ID",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"properties",
								":PROPERTY_ID"
							],
							"variable": [
								{
									"value": "{{PROPERTY_ID}}",
									"id": "PROPERTY_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a property by ID.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "639b0194-6dde-59cd-8772-b4554045a052",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://reactor.adobe.io/properties/:PROPERTY_ID",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"properties",
								":PROPERTY_ID"
							],
							"variable": [
								{
									"value": "{{PROPERTY_ID}}",
									"id": "PROPERTY_ID"
								}
							]
						},
						"description": "**Note**:\n\nWhen updating a property, its ID must be provided in both the request path and the request payload, as shown in the example below. These IDs must match in order for the call to be successful.\n\nThe following attributes can be edited for a property:\n* `development`\n\n* `domains`\n* `name`\n* `platform`\n* `privacy`\n* `rule_component_sequencing_enabled`\n* `ssl_enabled`\n* `undefined_vars_return_empty`"
					},
					"response": []
				},
				{
					"name": "Delete a property by ID.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "f69ea392-6e27-51b6-8194-e642b2e8db0f",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/properties/:PROPERTY_ID",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"properties",
								":PROPERTY_ID"
							],
							"variable": [
								{
									"value": "{{PROPERTY_ID}}",
									"id": "PROPERTY_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Look up the details of the company that owns a specified property.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "15774e2d-239f-5de0-a564-f9a06bb2033b",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/properties/:PROPERTY_ID/company",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"properties",
								":PROPERTY_ID",
								"company"
							],
							"variable": [
								{
									"value": "{{PROPERTY_ID}}",
									"id": "PROPERTY_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve a list of callbacks belonging to a specific property.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "f0fdfa04-0938-5d76-9402-4e485ac9b90a",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/properties/:PROPERTY_ID/callbacks?created_at={{created_at}}&updated_at={{updated_at}}",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"properties",
								":PROPERTY_ID",
								"callbacks"
							],
							"query": [
								{
									"key": "created_at",
									"value": "{{created_at}}"
								},
								{
									"key": "updated_at",
									"value": "{{updated_at}}"
								}
							],
							"variable": [
								{
									"value": "{{PROPERTY_ID}}",
									"id": "PROPERTY_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new callback for a specific property.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "5224820a-d541-5471-b81a-8795cc8e5453",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://reactor.adobe.io/properties/:PROPERTY_ID/callbacks",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"properties",
								":PROPERTY_ID",
								"callbacks"
							],
							"variable": [
								{
									"value": "{{PROPERTY_ID}}",
									"id": "PROPERTY_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve a list of data elements belonging to a specific property.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "39f618f2-3550-5688-9f1c-7024e380b5bd",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/properties/:PROPERTY_ID/data_elements?created_at={{created_at}}&updated_at={{updated_at}}&published_at={{published_at}}&published={{published}}&enabled={{enabled}}&name={{name}}&origin_id={{origin_id}}&revision_number={{revision_number}}",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"properties",
								":PROPERTY_ID",
								"data_elements"
							],
							"query": [
								{
									"key": "created_at",
									"value": "{{created_at}}"
								},
								{
									"key": "updated_at",
									"value": "{{updated_at}}"
								},
								{
									"key": "published_at",
									"value": "{{published_at}}"
								},
								{
									"key": "published",
									"value": "{{published}}"
								},
								{
									"key": "enabled",
									"value": "{{enabled}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "origin_id",
									"value": "{{origin_id}}"
								},
								{
									"key": "revision_number",
									"value": "{{revision_number}}"
								}
							],
							"variable": [
								{
									"value": "{{PROPERTY_ID}}",
									"id": "PROPERTY_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new data element for a specific property.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "5551f430-38dc-502b-be9b-c9a4df1e0467",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://reactor.adobe.io/properties/:PROPERTY_ID/data_elements",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"properties",
								":PROPERTY_ID",
								"data_elements"
							],
							"variable": [
								{
									"value": "{{PROPERTY_ID}}",
									"id": "PROPERTY_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve a list of environments belonging to a specific property.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "cf8cfde0-3139-557b-828b-90b4ebe13bcf",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/properties/:PROPERTY_ID/environments?created_at={{created_at}}&updated_at={{updated_at}}&name={{name}}&stage={{stage}}&token={{token}}",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"properties",
								":PROPERTY_ID",
								"environments"
							],
							"query": [
								{
									"key": "created_at",
									"value": "{{created_at}}"
								},
								{
									"key": "updated_at",
									"value": "{{updated_at}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "stage",
									"value": "{{stage}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							],
							"variable": [
								{
									"value": "{{PROPERTY_ID}}",
									"id": "PROPERTY_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new environment for a specific property.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "7fed37d5-b395-569c-a2c8-575024804382",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://reactor.adobe.io/properties/:PROPERTY_ID/environments",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"properties",
								":PROPERTY_ID",
								"environments"
							],
							"variable": [
								{
									"value": "{{PROPERTY_ID}}",
									"id": "PROPERTY_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve a list of extensions belonging to a specific property.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "7f38fc54-fbd7-542b-9a6b-2d0538dc7100",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/properties/:PROPERTY_ID/extensions?created_at={{created_at}}&updated_at={{updated_at}}&name={{name}}&display_name={{display_name}}&enabled={{enabled}}&origin_id={{origin_id}}&published={{published}}&published_at={{published_at}}&revision_number={{revision_number}}&version={{version}}",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"properties",
								":PROPERTY_ID",
								"extensions"
							],
							"query": [
								{
									"key": "created_at",
									"value": "{{created_at}}"
								},
								{
									"key": "updated_at",
									"value": "{{updated_at}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "display_name",
									"value": "{{display_name}}"
								},
								{
									"key": "enabled",
									"value": "{{enabled}}"
								},
								{
									"key": "origin_id",
									"value": "{{origin_id}}"
								},
								{
									"key": "published",
									"value": "{{published}}"
								},
								{
									"key": "published_at",
									"value": "{{published_at}}"
								},
								{
									"key": "revision_number",
									"value": "{{revision_number}}"
								},
								{
									"key": "version",
									"value": "{{version}}"
								}
							],
							"variable": [
								{
									"value": "{{PROPERTY_ID}}",
									"id": "PROPERTY_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new extension for a specific property.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "c61715b1-1da1-54a7-8c51-235fb3248398",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://reactor.adobe.io/properties/:PROPERTY_ID/extensions",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"properties",
								":PROPERTY_ID",
								"extensions"
							],
							"variable": [
								{
									"value": "{{PROPERTY_ID}}",
									"id": "PROPERTY_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve a list of hosts belonging to a specific property.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "dbd163e6-fe8a-5fb1-b276-8709909ffc84",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/properties/:PROPERTY_ID/hosts?created_at={{created_at}}&updated_at={{updated_at}}&name={{name}}&display_name={{display_name}}&enabled={{enabled}}&origin_id={{origin_id}}&published={{published}}&published_at={{published_at}}&revision_number={{revision_number}}&version={{version}}",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"properties",
								":PROPERTY_ID",
								"hosts"
							],
							"query": [
								{
									"key": "created_at",
									"value": "{{created_at}}"
								},
								{
									"key": "updated_at",
									"value": "{{updated_at}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "display_name",
									"value": "{{display_name}}"
								},
								{
									"key": "enabled",
									"value": "{{enabled}}"
								},
								{
									"key": "origin_id",
									"value": "{{origin_id}}"
								},
								{
									"key": "published",
									"value": "{{published}}"
								},
								{
									"key": "published_at",
									"value": "{{published_at}}"
								},
								{
									"key": "revision_number",
									"value": "{{revision_number}}"
								},
								{
									"key": "version",
									"value": "{{version}}"
								}
							],
							"variable": [
								{
									"value": "{{PROPERTY_ID}}",
									"id": "PROPERTY_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new host for a specific property.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "35b156d9-21f6-52eb-90c5-b7d28341bb49",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://reactor.adobe.io/properties/:PROPERTY_ID/hosts",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"properties",
								":PROPERTY_ID",
								"hosts"
							],
							"variable": [
								{
									"value": "{{PROPERTY_ID}}",
									"id": "PROPERTY_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve a list of libraries belonging to a specific property.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "44e49e5e-697b-5236-b877-6b5bcff5103b",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/properties/:PROPERTY_ID/libraries?created_at={{created_at}}&updated_at={{updated_at}}&name={{name}}&stale={{stale}}&state={{state}}",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"properties",
								":PROPERTY_ID",
								"libraries"
							],
							"query": [
								{
									"key": "created_at",
									"value": "{{created_at}}"
								},
								{
									"key": "updated_at",
									"value": "{{updated_at}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "stale",
									"value": "{{stale}}"
								},
								{
									"key": "state",
									"value": "{{state}}"
								}
							],
							"variable": [
								{
									"value": "{{PROPERTY_ID}}",
									"id": "PROPERTY_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new library for a specific property.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "65fef09d-2aab-5fe4-b50a-08ef1732d4e4",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://reactor.adobe.io/properties/:PROPERTY_ID/libraries",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"properties",
								":PROPERTY_ID",
								"libraries"
							],
							"variable": [
								{
									"value": "{{PROPERTY_ID}}",
									"id": "PROPERTY_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve a list of rules belonging to a specific property.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "5c8639ae-689c-55ed-b0bf-5968fc93dd09",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/properties/:PROPERTY_ID/rules?created_at={{created_at}}&updated_at={{updated_at}}&dirty={{dirty}}&enabled={{enabled}}&name={{name}}&origin_id={{origin_id}}&published={{published}}&published_at={{published_at}}&revision_number={{revision_number}}",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"properties",
								":PROPERTY_ID",
								"rules"
							],
							"query": [
								{
									"key": "created_at",
									"value": "{{created_at}}"
								},
								{
									"key": "updated_at",
									"value": "{{updated_at}}"
								},
								{
									"key": "dirty",
									"value": "{{dirty}}"
								},
								{
									"key": "enabled",
									"value": "{{enabled}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "origin_id",
									"value": "{{origin_id}}"
								},
								{
									"key": "published",
									"value": "{{published}}"
								},
								{
									"key": "published_at",
									"value": "{{published_at}}"
								},
								{
									"key": "revision_number",
									"value": "{{revision_number}}"
								}
							],
							"variable": [
								{
									"value": "{{PROPERTY_ID}}",
									"id": "PROPERTY_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new rule for a specific property.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "e9e9af85-5325-524a-8a68-b1d545c93cf3",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://reactor.adobe.io/properties/:PROPERTY_ID/rules",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"properties",
								":PROPERTY_ID",
								"rules"
							],
							"variable": [
								{
									"value": "{{PROPERTY_ID}}",
									"id": "PROPERTY_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve a list of notes belonging to a specific property.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "2bdf2eb0-74f0-51b1-a7a6-db4854c03003",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/properties/:PROPERTY_ID/notes?created_at={{created_at}}&updated_at={{updated_at}}&text={{text}}",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"properties",
								":PROPERTY_ID",
								"notes"
							],
							"query": [
								{
									"key": "created_at",
									"value": "{{created_at}}"
								},
								{
									"key": "updated_at",
									"value": "{{updated_at}}"
								},
								{
									"key": "text",
									"value": "{{text}}"
								}
							],
							"variable": [
								{
									"value": "{{PROPERTY_ID}}",
									"id": "PROPERTY_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a note for a property.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "fa271717-7e1a-5e19-9d0f-dc09263f7fe6",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://reactor.adobe.io/properties/:PROPERTY_ID/notes",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"properties",
								":PROPERTY_ID",
								"notes"
							],
							"variable": [
								{
									"value": "{{PROPERTY_ID}}",
									"id": "PROPERTY_ID"
								}
							]
						}
					},
					"response": []
				}
			],
			"_postman_id": "a3312c17-8e86-5d35-b8f0-f773a66e1e9a",
			"description": "A property is a container that holds most of the other resources available within the Reactor API. The only resources that are not owned by a property are audit events, companies, extension packages, and profiles. A property belongs to exactly one company, and a company can have many properties."
		},
		{
			"name": "App configurations",
			"item": [
				{
					"name": "Look up an app configuration by ID.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "0e5d89f4-740d-5d55-af97-ec4ff3f5888f",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/app_configurations/:CONFIG_ID",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"app_configurations",
								":CONFIG_ID"
							],
							"variable": [
								{
									"value": "{{CONFIG_ID}}",
									"id": "CONFIG_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update an app configuration by ID.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "01d49609-f480-5ba3-9fbf-9c504e58aba2",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://reactor.adobe.io/app_configurations/:CONFIG_ID",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"app_configurations",
								":CONFIG_ID"
							],
							"variable": [
								{
									"value": "{{CONFIG_ID}}",
									"id": "CONFIG_ID"
								}
							]
						},
						"description": "**Note**: When updating an app configuration, its ID must be provided in both the request path and the request payload, as shown in the example below. These IDs must match in order for the call to be successful."
					},
					"response": []
				},
				{
					"name": "Delete an app configuration by ID.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "7765db10-a447-52c0-8d8e-30d36e00b124",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/app_configurations/:CONFIG_ID",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"app_configurations",
								":CONFIG_ID"
							],
							"variable": [
								{
									"value": "{{CONFIG_ID}}",
									"id": "CONFIG_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Look up the details of the company that owns a specified app configuration.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "35459d8e-3f1f-5614-9230-b6cff83e1b49",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/app_configurations/:CONFIG_ID/company",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"app_configurations",
								":CONFIG_ID",
								"company"
							],
							"variable": [
								{
									"value": "{{CONFIG_ID}}",
									"id": "CONFIG_ID"
								}
							]
						}
					},
					"response": []
				}
			],
			"_postman_id": "38b85e32-9ce7-57c3-b3fd-d461713d5c3f",
			"description": "App configurations allow credentials to be stored and retrieved for later use."
		},
		{
			"name": "Callbacks",
			"item": [
				{
					"name": "Look up a callback by ID.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "287f74ce-f0a3-5290-ac2b-5ec1f969744a",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/callbacks/:CALLBACK_ID",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"callbacks",
								":CALLBACK_ID"
							],
							"variable": [
								{
									"value": "{{CALLBACK_ID}}",
									"id": "CALLBACK_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a callback by ID.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "d804df4f-3442-5efe-b901-226076cd02d5",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://reactor.adobe.io/callbacks/:CALLBACK_ID",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"callbacks",
								":CALLBACK_ID"
							],
							"variable": [
								{
									"value": "{{CALLBACK_ID}}",
									"id": "CALLBACK_ID"
								}
							]
						},
						"description": "**Note**:\n\nWhen updating a callback, its ID must be provided in both the request path and the request payload, as shown in the example below. These IDs must match in order for the call to be successful.\n\nWhen updating an app configuration, its ID must be provided in both the request path and the request payload, as shown in the example below. These IDs must match in order for the call to be successful.\n\nThe following attributes are editable for a callback:\n* `url`\n\n* `subscriptions`"
					},
					"response": []
				},
				{
					"name": "Delete a callback by ID.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "3a68a5af-c448-5639-98ec-6fa77603e997",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/callbacks/:CALLBACK_ID",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"callbacks",
								":CALLBACK_ID"
							],
							"variable": [
								{
									"value": "{{CALLBACK_ID}}",
									"id": "CALLBACK_ID"
								}
							]
						}
					},
					"response": []
				}
			],
			"_postman_id": "bea507a5-89db-527e-8962-3b285451397f",
			"description": "A callback is a message that Platform sends to a URL host whenever a new audit event is generated."
		},
		{
			"name": "Data elements",
			"item": [
				{
					"name": "Look up a data element by ID.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "011b3fa8-025a-5f96-84ef-38bb628a1e33",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/data_elements/:DATA_ELEMENT_ID",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"data_elements",
								":DATA_ELEMENT_ID"
							],
							"variable": [
								{
									"value": "{{DATA_ELEMENT_ID}}",
									"id": "DATA_ELEMENT_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update or revise a data element by ID.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "29007b4c-91df-5f26-be61-f5b45197c7cf",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://reactor.adobe.io/data_elements/:DATA_ELEMENT_ID",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"data_elements",
								":DATA_ELEMENT_ID"
							],
							"variable": [
								{
									"value": "{{DATA_ELEMENT_ID}}",
									"id": "DATA_ELEMENT_ID"
								}
							]
						},
						"description": "**Note**:\n\nRevising a data element creates a new revision of the data element which is assigned its own ID. The original data element may be discovered via the origin link. Revising a data element is achieved by supplying a `meta` attribute containing an `action` property with the value `revise` (`\"action\": \"revise\"`). Excluding this property will update the current revision of the data element without creating a new one.\n\nWhen updating a data element, its ID must be provided in both the request path and the request payload, as shown in the example below. These IDs must match in order for the call to be successful.\n\nAttributes to be updated must be included in the `attributes` object in the payload. Editable attributes for a data element include the following:\n* `clean_text`\n\n* `default_value`\n* `delegate_descriptor_id`\n* `enabled`\n* `force_lower_case`\n* `name`\n* `settings`\n* `storage_duration`"
					},
					"response": []
				},
				{
					"name": "Retrieve a list of notes attached to a specific data element.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "f049dcf2-4adb-54ff-965e-859fb4744546",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/data_elements/:DATA_ELEMENT_ID/notes?created_at={{created_at}}&updated_at={{updated_at}}&text={{text}}",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"data_elements",
								":DATA_ELEMENT_ID",
								"notes"
							],
							"query": [
								{
									"key": "created_at",
									"value": "{{created_at}}"
								},
								{
									"key": "updated_at",
									"value": "{{updated_at}}"
								},
								{
									"key": "text",
									"value": "{{text}}"
								}
							],
							"variable": [
								{
									"value": "{{DATA_ELEMENT_ID}}",
									"id": "DATA_ELEMENT_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a note for a data element.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "0ee2edb0-3bd8-52e4-b91c-5155ac1bed5b",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://reactor.adobe.io/data_elements/:DATA_ELEMENT_ID/notes",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"data_elements",
								":DATA_ELEMENT_ID",
								"notes"
							],
							"variable": [
								{
									"value": "{{DATA_ELEMENT_ID}}",
									"id": "DATA_ELEMENT_ID"
								}
							]
						}
					},
					"response": []
				}
			],
			"_postman_id": "08843fd8-9281-50c6-90af-f54158a92ebb",
			"description": "A data element functions as a variable which points to an important piece of data within your application. Data elements are used within rules and extension configurations. When the rule is triggered at runtime in a browser or an application, the value of the data element is resolved and used within the rule."
		},
		{
			"name": "Environments",
			"item": [
				{
					"name": "Look up an environment by ID.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "0b6bbd12-67c8-5d29-8219-ff74f37b5873",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/environments/:ENVIRONMENT_ID",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"environments",
								":ENVIRONMENT_ID"
							],
							"variable": [
								{
									"value": "{{ENVIRONMENT_ID}}",
									"id": "ENVIRONMENT_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update an environment by ID.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "fd039fcc-44ab-5ff6-9caa-f9156a4f14ce",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://reactor.adobe.io/environments/:ENVIRONMENT_ID",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"environments",
								":ENVIRONMENT_ID"
							],
							"variable": [
								{
									"value": "{{ENVIRONMENT_ID}}",
									"id": "ENVIRONMENT_ID"
								}
							]
						},
						"description": "**Note**:\n\nWhen updating or revising a rule, its ID must be provided in both the request path and the request payload, as shown in the example below. These IDs must match in order for the call to be successful.\n\nAttributes to be updated must be included in the `attributes` object in the payload. Editable attributes for an environment include the following:\n\n* `archive`\n\n* `archive_passphrase`\n* `include_debug_library`\n* `name`\n* `path`"
					},
					"response": []
				},
				{
					"name": "Delete an environment by ID.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "90733ab0-bf5c-58b8-84b3-ba6571e1a27c",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/environments/:ENVIRONMENT_ID",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"environments",
								":ENVIRONMENT_ID"
							],
							"variable": [
								{
									"value": "{{ENVIRONMENT_ID}}",
									"id": "ENVIRONMENT_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve a list of builds that use a specific environment.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "bf0def7f-fa81-51d2-a3f9-6cf8ec7f70f7",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/environments/:ENVIRONMENT_ID/builds",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"environments",
								":ENVIRONMENT_ID",
								"builds"
							],
							"variable": [
								{
									"value": "{{ENVIRONMENT_ID}}",
									"id": "ENVIRONMENT_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Look up the host for a specific environment.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "cdcdb751-bc6d-51ab-837a-cefcb6da9fc0",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/environments/:ENVIRONMENT_ID/host",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"environments",
								":ENVIRONMENT_ID",
								"host"
							],
							"variable": [
								{
									"value": "{{ENVIRONMENT_ID}}",
									"id": "ENVIRONMENT_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Look up the host relationship for a specific environment.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "59a056a3-a03d-57e3-8c53-66ac9af08d25",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/environments/:ENVIRONMENT_ID/relationships/host",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"environments",
								":ENVIRONMENT_ID",
								"relationships",
								"host"
							],
							"variable": [
								{
									"value": "{{ENVIRONMENT_ID}}",
									"id": "ENVIRONMENT_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Look up the related library for a specific environment.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "02dc07cb-7bc6-586f-867c-19d69e388614",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/environments/:ENVIRONMENT_ID/library",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"environments",
								":ENVIRONMENT_ID",
								"library"
							],
							"variable": [
								{
									"value": "{{ENVIRONMENT_ID}}",
									"id": "ENVIRONMENT_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Look up the related property for a specific environment.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "4ad19528-e6bf-569a-9de8-1a20112313b7",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/environments/:ENVIRONMENT_ID/property",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"environments",
								":ENVIRONMENT_ID",
								"property"
							],
							"variable": [
								{
									"value": "{{ENVIRONMENT_ID}}",
									"id": "ENVIRONMENT_ID"
								}
							]
						}
					},
					"response": []
				}
			],
			"_postman_id": "d692bddf-ea58-5583-baba-9bc4ccd91b81",
			"description": "An environment indicates the specific host where a build can be deployed, and whether the build should be deployed as a set of files or compressed in an archive format. In the Reactor API, Environments are separate from hosts themselves, which are managed by the /hosts endpoint."
		},
		{
			"name": "Extension packages",
			"item": [
				{
					"name": "Retrieve a list of extension packages.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "f7b5e5b5-5b3b-5845-a2d9-05d4db36afeb",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/extension_packages?created_at={{created_at}}&updated_at={{updated_at}}&name={{name}}&display_name={{display_name}}&status={{status}}&platform={{platform}}&version={{version}}",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"extension_packages"
							],
							"query": [
								{
									"key": "created_at",
									"value": "{{created_at}}"
								},
								{
									"key": "updated_at",
									"value": "{{updated_at}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "display_name",
									"value": "{{display_name}}"
								},
								{
									"key": "status",
									"value": "{{status}}"
								},
								{
									"key": "platform",
									"value": "{{platform}}"
								},
								{
									"key": "version",
									"value": "{{version}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new extension package.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "fa899d44-c1bd-5869-9658-5069d32ea09a",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "package",
									"value": "{{package}}",
									"description": "The extension package archive file.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://reactor.adobe.io/extension_packages",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"extension_packages"
							]
						},
						"description": "**Note**: Instead of a JSON payload, this endpoint expects a file upload via multipart form data."
					},
					"response": []
				},
				{
					"name": "Look up an extension package by ID.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "7e1497a3-e5bf-5d71-a901-8827510ca851",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/extension_packages/:EXTENSION_PACKAGE_ID",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"extension_packages",
								":EXTENSION_PACKAGE_ID"
							],
							"variable": [
								{
									"value": "{{EXTENSION_PACKAGE_ID}}",
									"id": "EXTENSION_PACKAGE_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update an extension package by ID.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "fd60e80a-42a9-5c94-abb1-1fb0362ca33f",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "package",
									"value": "{{package}}",
									"description": "The extension package archive file.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://reactor.adobe.io/extension_packages/:EXTENSION_PACKAGE_ID",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"extension_packages",
								":EXTENSION_PACKAGE_ID"
							],
							"variable": [
								{
									"value": "{{EXTENSION_PACKAGE_ID}}",
									"id": "EXTENSION_PACKAGE_ID"
								}
							]
						},
						"description": "**Note**: Only development extension packages can be updated using a new archive file. Once the extension package has been transitioned to either private or public, it can no longer be updated. If you want to add new functionality or fix bugs, you must first create a new extension package with the same name, but with a new version. When this new extension package is transitioned to private or public, it will become available in the marketplace and replace the previous version."
					},
					"response": []
				},
				{
					"name": "Privately release or discontinue an extension package by ID.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "10a3ce6f-ba74-5031-845c-ba89e8614436",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://reactor.adobe.io/extension_packages/:EXTENSION_PACKAGE_ID",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"extension_packages",
								":EXTENSION_PACKAGE_ID"
							],
							"variable": [
								{
									"value": "{{EXTENSION_PACKAGE_ID}}",
									"id": "EXTENSION_PACKAGE_ID"
								}
							]
						},
						"description": "**Note**:\n\nOnce you have completed testing your extension package you can release it privately. This makes it available to any property within your company. After you have released privately, you can begin the public release process by filling out the [Public Release Request Form](https://adobe.allegiancetech.com/cgi-bin/qwebcorporate.dll?idx=7DRB5U).\n  \n\nA private release is achieved by supplying an `action` with a value of `release_private` in the JSON payload's `meta` object.\n\nTo discontinue a package, you must supply an `attributes` object in the payload, containing a `discontinued` property with a value of `true`.\n\nWhen updating an extension package, its ID must be provided in both the request path and the request payload, as shown in the example below. These IDs must match in order for the call to be successful."
					},
					"response": []
				},
				{
					"name": "Retrieve the versions of an extension package by ID.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "45d67d33-d402-5fd1-91aa-b8a07711722a",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/extension_packages/:EXTENSION_PACKAGE_ID/versions",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"extension_packages",
								":EXTENSION_PACKAGE_ID",
								"versions"
							],
							"variable": [
								{
									"value": "{{EXTENSION_PACKAGE_ID}}",
									"id": "EXTENSION_PACKAGE_ID"
								}
							]
						}
					},
					"response": []
				}
			],
			"_postman_id": "c06b47a9-8f5d-53ff-99aa-d0c396b2a367",
			"description": "An extension package represents a grouping of individual capabilities that can be made available to a tags user. Most commonly these capabilities come in the form of rule components (events, conditions, and actions) and data elements, but can also include main modules and shared modules. The capabilities provided by an extension package are installed as an extension when it is included in a library."
		},
		{
			"name": "Extensions",
			"item": [
				{
					"name": "Look up an extension by ID.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "86f6c4b9-612b-5a27-94e4-fab19322ae1e",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/extensions/:EXTENSION_ID",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"extensions",
								":EXTENSION_ID"
							],
							"variable": [
								{
									"value": "{{EXTENSION_ID}}",
									"id": "EXTENSION_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Revise an extension by ID.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "cda6b59b-2ac8-5598-9e76-9a19e15c2f9b",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://reactor.adobe.io/extensions/:EXTENSION_ID",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"extensions",
								":EXTENSION_ID"
							],
							"variable": [
								{
									"value": "{{EXTENSION_ID}}",
									"id": "EXTENSION_ID"
								}
							]
						},
						"description": "**Note**:\n\nThis endpoint creates a new revision of an extension with the current (head) revision. A revision of an extension will have its own ID, and the original extension may be discovered via the origin link.\n\nWhen revising an extension, its ID must be provided in both the request path and the request payload, as shown in the example below. These IDs must match in order for the call to be successful.\n\nRevising an extension is achieved by supplying an `action` with a value of `revise` in the meta object of the request data."
					},
					"response": []
				},
				{
					"name": "Delete an extension by ID.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "90a741d7-9633-55e7-8700-9b6ac8ecd45f",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/extensions/:EXTENSION_ID",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"extensions",
								":EXTENSION_ID"
							],
							"variable": [
								{
									"value": "{{EXTENSION_ID}}",
									"id": "EXTENSION_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Look up the extension package from which a specific extension was created.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "f9e94118-9ebb-5ef6-ba57-166a00fb0922",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/extensions/:EXTENSION_ID/extension_package",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"extensions",
								":EXTENSION_ID",
								"extension_package"
							],
							"variable": [
								{
									"value": "{{EXTENSION_ID}}",
									"id": "EXTENSION_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve a list of libraries attached to a specific extension.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "bcedc6d7-52b3-54de-8523-8eef454c6d82",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/extensions/:EXTENSION_ID/libraries",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"extensions",
								":EXTENSION_ID",
								"libraries"
							],
							"variable": [
								{
									"value": "{{EXTENSION_ID}}",
									"id": "EXTENSION_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Look up the property that owns a specific extension.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "18a00af0-f032-57cb-8a98-6bcce20a30b6",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/extensions/:EXTENSION_ID/property",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"extensions",
								":EXTENSION_ID",
								"property"
							],
							"variable": [
								{
									"value": "{{EXTENSION_ID}}",
									"id": "EXTENSION_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Look up the related origin for a specific extension.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "faaef866-3f84-53d8-bd13-7c39fd779d9c",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/extensions/:EXTENSION_ID/origin",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"extensions",
								":EXTENSION_ID",
								"origin"
							],
							"variable": [
								{
									"value": "{{EXTENSION_ID}}",
									"id": "EXTENSION_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve a list of revisions for a specific extension.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "21f212fe-184d-527d-8809-a3d935c8e031",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/extensions/:EXTENSION_ID/revisions",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"extensions",
								":EXTENSION_ID",
								"revisions"
							],
							"variable": [
								{
									"value": "{{EXTENSION_ID}}",
									"id": "EXTENSION_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve a list of notes attached to a specific extension.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "e857ffee-07aa-56cb-bfec-e03054aba3dd",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/extensions/:EXTENSION_ID/notes",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"extensions",
								":EXTENSION_ID",
								"notes"
							],
							"variable": [
								{
									"value": "{{EXTENSION_ID}}",
									"id": "EXTENSION_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a note for an extension.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "d51fe46b-8ac6-5832-8d26-8f42831f5f66",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://reactor.adobe.io/extensions/:EXTENSION_ID/notes",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"extensions",
								":EXTENSION_ID",
								"notes"
							],
							"variable": [
								{
									"value": "{{EXTENSION_ID}}",
									"id": "EXTENSION_ID"
								}
							]
						}
					},
					"response": []
				}
			],
			"_postman_id": "dd9bb279-25f4-5081-8fc7-3a37aa11c475",
			"description": "An extension represents the installed instance of an extension package. An extension makes the features defined by an extension package available to a property. These features are leveraged when creating data elements and rule components."
		},
		{
			"name": "Hosts",
			"item": [
				{
					"name": "Look up a host by ID.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "79e29c22-5200-557a-9b0f-b2a810d0ae8a",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/hosts/:HOST_ID",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"hosts",
								":HOST_ID"
							],
							"variable": [
								{
									"value": "{{HOST_ID}}",
									"id": "HOST_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a host by ID.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "b364dae6-cb4f-5fdf-9843-34e41f9f5116",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://reactor.adobe.io/hosts/:HOST_ID",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"hosts",
								":HOST_ID"
							],
							"variable": [
								{
									"value": "{{HOST_ID}}",
									"id": "HOST_ID"
								}
							]
						},
						"description": "**Note**:\n\nWhen updating or revising a rule, its ID must be provided in both the request path and the request payload, as shown in the example below. These IDs must match in order for the call to be successful.\n\nThe following attributes can be edited for a host:\n\n * `encrypted_private_key`\n\n\n* `string`\n* `optional`\n* `name`\n* `string`\n* `optional`\n* `path`\n* `string`\n* `optional`\n* `port`\n* `integer`\n* `optional`\n* `server`\n* `string`\n* `optional`\n* `type_of`\n* `string`\n* `optional`\n* `username`     "
					},
					"response": []
				},
				{
					"name": "Delete a host by ID.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "9e0122a6-b1c8-5ffa-8e77-1b5276cdadd8",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/hosts/:HOST_ID",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"hosts",
								":HOST_ID"
							],
							"variable": [
								{
									"value": "{{HOST_ID}}",
									"id": "HOST_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Look up the property that owns a specific host.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "eb24a7d6-0d30-5683-bc48-1d7b1cd0b23f",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/hosts/:HOST_ID/property",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"hosts",
								":HOST_ID",
								"property"
							],
							"variable": [
								{
									"value": "{{HOST_ID}}",
									"id": "HOST_ID"
								}
							]
						}
					},
					"response": []
				}
			],
			"_postman_id": "56579d64-c899-5d1b-950b-c91833c08132",
			"description": "A host represents a hosted destination where a library build can be delivered and ultimately deployed. Hosts can be either Akamai or SFTP servers."
		},
		{
			"name": "Libraries",
			"item": [
				{
					"name": "Look up a library by ID.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "d5e4adec-7122-527f-a38d-42c5989a54c8",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/libraries/:LIBRARY_ID",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"libraries",
								":LIBRARY_ID"
							],
							"variable": [
								{
									"value": "{{LIBRARY_ID}}",
									"id": "LIBRARY_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a library by ID.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "03d80b53-a6c3-5c5b-addd-14c0084326af",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://reactor.adobe.io/libraries/:LIBRARY_ID",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"libraries",
								":LIBRARY_ID"
							],
							"variable": [
								{
									"value": "{{LIBRARY_ID}}",
									"id": "LIBRARY_ID"
								}
							]
						},
						"description": "**Note**:\n\nThis endpoint allows you to update the name of a library, or transition the library between different states in the [publishing flow](https://experienceleague.adobe.com/docs/launch/using/publish/publishing-flow.html).\n\nTo update the name of a library, the payload must include an `attributes` object, containing a single `name` property with the updated value.\n\nTo transition the library between states, the payload must include a `meta` object, containing a single `action` property whose value represents the specific transition action. The available actions for a library depend on its current publishing state. See the API guide on [transitioning a library](https://developer.adobelaunch.com/api/reference/1.0/libraries/transition/) for details on the available actions for each library state.\n\nWhen updating a library, its ID must be provided in both the request path and the request payload, as shown in the example below. These IDs must match in order for the call to be successful.        "
					},
					"response": []
				},
				{
					"name": "Delete a library by ID.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "8634e94c-c1a5-5022-a896-b34d7f2959f5",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/libraries/:LIBRARY_ID",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"libraries",
								":LIBRARY_ID"
							],
							"variable": [
								{
									"value": "{{LIBRARY_ID}}",
									"id": "LIBRARY_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Look up the related property for a specific library.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "fb505d76-8bc2-53f4-985e-a0b5720be42d",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/libraries/:LIBRARY_ID/property",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"libraries",
								":LIBRARY_ID",
								"property"
							],
							"variable": [
								{
									"value": "{{LIBRARY_ID}}",
									"id": "LIBRARY_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new build for a specific library.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "6a6dbf8b-7614-5c5b-be3a-065ecbb9cc3a",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/libraries/:LIBRARY_ID/builds",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"libraries",
								":LIBRARY_ID",
								"builds"
							],
							"variable": [
								{
									"value": "{{LIBRARY_ID}}",
									"id": "LIBRARY_ID"
								}
							]
						},
						"description": "This POST request does not accept a payload, as the build parameters are determined by the parent library."
					},
					"response": []
				},
				{
					"name": "Look up the related environment for a specific library.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "2643c423-70e8-5d3c-849a-5b5b7509a348",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/libraries/:LIBRARY_ID/environment",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"libraries",
								":LIBRARY_ID",
								"environment"
							],
							"variable": [
								{
									"value": "{{LIBRARY_ID}}",
									"id": "LIBRARY_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Look up the library that is directly upstream of a specific library.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "60836215-558e-5e6e-8136-b47d4cdb54cc",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/libraries/:LIBRARY_ID/upstream_library",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"libraries",
								":LIBRARY_ID",
								"upstream_library"
							],
							"variable": [
								{
									"value": "{{LIBRARY_ID}}",
									"id": "LIBRARY_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve a list of related data elements for a specific library.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "611fae48-56f4-5812-a4a8-7d1bb5daa680",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/libraries/:LIBRARY_ID/data_elements",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"libraries",
								":LIBRARY_ID",
								"data_elements"
							],
							"variable": [
								{
									"value": "{{LIBRARY_ID}}",
									"id": "LIBRARY_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve a list of data element relationships for a specific library.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "c9823b2c-b88f-5a2e-85b8-f01a1170dd45",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/libraries/:LIBRARY_ID/relationships/data_elements",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"libraries",
								":LIBRARY_ID",
								"relationships",
								"data_elements"
							],
							"variable": [
								{
									"value": "{{LIBRARY_ID}}",
									"id": "LIBRARY_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add data elements to a specific library.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "f0bda049-f267-552a-a102-df2e27b1b90e",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://reactor.adobe.io/libraries/:LIBRARY_ID/relationships/data_elements",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"libraries",
								":LIBRARY_ID",
								"relationships",
								"data_elements"
							],
							"variable": [
								{
									"value": "{{LIBRARY_ID}}",
									"id": "LIBRARY_ID"
								}
							]
						},
						"description": "The payload for this call accepts an array of objects, representing the data elements that you want to add to the library. In this array, each data element object must include the following attributes:\n\n* `id`: The ID of the data element that you want to add.\n\n* `type`: Must be set to \"data_elements\"."
					},
					"response": []
				},
				{
					"name": "Replace all data element relationships for a specific library.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "924ad7bb-a4d7-5555-83d6-dfe0afdb5e4d",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://reactor.adobe.io/libraries/:LIBRARY_ID/relationships/data_elements",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"libraries",
								":LIBRARY_ID",
								"relationships",
								"data_elements"
							],
							"variable": [
								{
									"value": "{{LIBRARY_ID}}",
									"id": "LIBRARY_ID"
								}
							]
						},
						"description": "This call replaces all of the existing data element relationships for a library with those you provide in a payload array. Within this array, each data element object must include the following attributes:\n\n* `id`: The ID of the data element that you want to include in the library.\n\n* `type`: Must be set to \"data_elements\"."
					},
					"response": []
				},
				{
					"name": "Remove a data element relationship from a specific library.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "ee5b42fb-3262-53d5-ae61-5951d8bf667f",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://reactor.adobe.io/libraries/:LIBRARY_ID/relationships/data_elements",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"libraries",
								":LIBRARY_ID",
								"relationships",
								"data_elements"
							],
							"variable": [
								{
									"value": "{{LIBRARY_ID}}",
									"id": "LIBRARY_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Look up the environment relationship for a specific library.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "e245ecb9-bcaf-5b4d-8bc5-0e7b7f696a13",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/libraries/:LIBRARY_ID/relationships/environment",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"libraries",
								":LIBRARY_ID",
								"relationships",
								"environment"
							],
							"variable": [
								{
									"value": "{{LIBRARY_ID}}",
									"id": "LIBRARY_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Set an environment relationship for a specific library.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "54e1e504-085a-589d-9e59-184a1b3f31ce",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://reactor.adobe.io/libraries/:LIBRARY_ID/relationships/environment",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"libraries",
								":LIBRARY_ID",
								"relationships",
								"environment"
							],
							"variable": [
								{
									"value": "{{LIBRARY_ID}}",
									"id": "LIBRARY_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove an environment relationship from a specific library.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "a28d8ab6-95ac-5358-8a87-b3c1ce8b233a",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/libraries/:LIBRARY_ID/relationships/environment",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"libraries",
								":LIBRARY_ID",
								"relationships",
								"environment"
							],
							"variable": [
								{
									"value": "{{LIBRARY_ID}}",
									"id": "LIBRARY_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve a list of related extensions for a specific library.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "6ed09ce4-7328-51d6-ae64-fb8c79e6d2f5",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/libraries/:LIBRARY_ID/extensions",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"libraries",
								":LIBRARY_ID",
								"extensions"
							],
							"variable": [
								{
									"value": "{{LIBRARY_ID}}",
									"id": "LIBRARY_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve a list of extension relationships for a specific library.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "57586dfb-dc74-5ea7-a640-5d017eeb3834",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/libraries/:LIBRARY_ID/relationships/extensions",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"libraries",
								":LIBRARY_ID",
								"relationships",
								"extensions"
							],
							"variable": [
								{
									"value": "{{LIBRARY_ID}}",
									"id": "LIBRARY_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add extensions to a specific library.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "d749b0ff-4a8a-5eb8-9ba2-ae0b339e82a1",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://reactor.adobe.io/libraries/:LIBRARY_ID/relationships/extensions",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"libraries",
								":LIBRARY_ID",
								"relationships",
								"extensions"
							],
							"variable": [
								{
									"value": "{{LIBRARY_ID}}",
									"id": "LIBRARY_ID"
								}
							]
						},
						"description": "The payload for this call accepts an array of objects, representing the extensions that you want to add to the library. In this array, each extension object must include the following attributes:\n\n* `id`: The ID of the extension that you want to include in the library.\n\n* `type`: Must be set to \"extensions\"."
					},
					"response": []
				},
				{
					"name": "Replace all extensions for a specific library.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "644797e8-b7aa-5cc4-9e9d-4cf25d556a46",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://reactor.adobe.io/libraries/:LIBRARY_ID/relationships/extensions",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"libraries",
								":LIBRARY_ID",
								"relationships",
								"extensions"
							],
							"variable": [
								{
									"value": "{{LIBRARY_ID}}",
									"id": "LIBRARY_ID"
								}
							]
						},
						"description": "This call replaces all of the existing extension relationships for a library with those you provide in a payload array. Within this array, each extension object must include the following attributes:\n\n* `id`: The ID of the extension that you want to include in the library.\n\n* `type`: Must be set to \"extensions\"."
					},
					"response": []
				},
				{
					"name": "Remove extensions from a specific library.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "270dab24-e5fd-5da5-ad56-bf3387e33f57",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/libraries/:LIBRARY_ID/relationships/extensions",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"libraries",
								":LIBRARY_ID",
								"relationships",
								"extensions"
							],
							"variable": [
								{
									"value": "{{LIBRARY_ID}}",
									"id": "LIBRARY_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve a list of related rules for a specific library.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "93bb0d81-e73a-5c9c-95a0-135044ba9c4d",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/libraries/:LIBRARY_ID/rules",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"libraries",
								":LIBRARY_ID",
								"rules"
							],
							"variable": [
								{
									"value": "{{LIBRARY_ID}}",
									"id": "LIBRARY_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve a list of rule relationships for a specific library.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "6ebf31c9-e5db-51cf-9d36-a12a072ec2f8",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/libraries/:LIBRARY_ID/relationships/rules",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"libraries",
								":LIBRARY_ID",
								"relationships",
								"rules"
							],
							"variable": [
								{
									"value": "{{LIBRARY_ID}}",
									"id": "LIBRARY_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add rules to a specific library.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "6b6dcf4f-2bf9-5474-bcff-749586106b80",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://reactor.adobe.io/libraries/:LIBRARY_ID/relationships/rules",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"libraries",
								":LIBRARY_ID",
								"relationships",
								"rules"
							],
							"variable": [
								{
									"value": "{{LIBRARY_ID}}",
									"id": "LIBRARY_ID"
								}
							]
						},
						"description": "The payload for this call accepts an array of objects, representing the rules that you want to add to the library. In this array, each rule object must include the following attributes:\n\n* `id`: The ID of the rule that you want to include in the library.\n\n* `type`: Must be set to \"rules\"."
					},
					"response": []
				},
				{
					"name": "Replace all rules for a specific library.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "9b483555-7718-598e-9312-e81546505fa9",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://reactor.adobe.io/libraries/:LIBRARY_ID/relationships/rules",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"libraries",
								":LIBRARY_ID",
								"relationships",
								"rules"
							],
							"variable": [
								{
									"value": "{{LIBRARY_ID}}",
									"id": "LIBRARY_ID"
								}
							]
						},
						"description": "This call replaces all of the existing rule relationships for a library with those you provide in a payload array. Within this array, each rule object must include the following attributes:\n\n* `id`: The ID of the rule that you want to include in the library.\n\n* `type`: Must be set to \"rules\"."
					},
					"response": []
				},
				{
					"name": "Remove rules from a specific library.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "4c518b65-4fc6-5dc5-9aae-9bcd6fd0215e",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://reactor.adobe.io/libraries/:LIBRARY_ID/relationships/rules",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"libraries",
								":LIBRARY_ID",
								"relationships",
								"rules"
							],
							"variable": [
								{
									"value": "{{LIBRARY_ID}}",
									"id": "LIBRARY_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve a list of notes attached to a specific library.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "e2b6f0d4-2247-567b-8d35-a6ffa1dc2f06",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/libraries/:LIBRARY_ID/notes?created_at={{created_at}}&updated_at={{updated_at}}&text={{text}}",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"libraries",
								":LIBRARY_ID",
								"notes"
							],
							"query": [
								{
									"key": "created_at",
									"value": "{{created_at}}"
								},
								{
									"key": "updated_at",
									"value": "{{updated_at}}"
								},
								{
									"key": "text",
									"value": "{{text}}"
								}
							],
							"variable": [
								{
									"value": "{{LIBRARY_ID}}",
									"id": "LIBRARY_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a note for a library.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "3cd1e5ee-c832-5603-808b-a8be603976c9",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://reactor.adobe.io/libraries/:LIBRARY_ID/notes",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"libraries",
								":LIBRARY_ID",
								"notes"
							],
							"variable": [
								{
									"value": "{{LIBRARY_ID}}",
									"id": "LIBRARY_ID"
								}
							]
						}
					},
					"response": []
				}
			],
			"_postman_id": "fb496e59-9fb4-5a43-acca-37533c03a197",
			"description": "A Library is a collection of resources (extensions, rules, and data elements) that represent the desired behavior of a property. Libraries are compiled into builds, and those builds are assigned to different environments as they move down the publishing flow from testing to production."
		},
		{
			"name": "Builds",
			"item": [
				{
					"name": "Retrieve a list of builds belonging to a specific library.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "970aa200-6749-5db1-8cbc-7290a3594a42",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/libraries/:LIBRARY_ID/builds?created_at={{created_at}}&updated_at={{updated_at}}&status={{status}}&token={{token}}",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"libraries",
								":LIBRARY_ID",
								"builds"
							],
							"query": [
								{
									"key": "created_at",
									"value": "{{created_at}}"
								},
								{
									"key": "updated_at",
									"value": "{{updated_at}}"
								},
								{
									"key": "status",
									"value": "{{status}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							],
							"variable": [
								{
									"value": "{{LIBRARY_ID}}",
									"id": "LIBRARY_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Look up a build by ID.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "40716927-a854-5a12-ab3d-06b55713ea57",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/builds/:BUILD_ID",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"builds",
								":BUILD_ID"
							],
							"variable": [
								{
									"value": "{{BUILD_ID}}",
									"id": "BUILD_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Republish a build by ID.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "02cc98cc-d7d1-5839-bba8-00310a3d89b2",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://reactor.adobe.io/builds/:BUILD_ID",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"builds",
								":BUILD_ID"
							],
							"variable": [
								{
									"value": "{{BUILD_ID}}",
									"id": "BUILD_ID"
								}
							]
						},
						"description": "**Note**: When republishing a build, its ID must be provided in both the request path and the request payload, as shown in the example below. These IDs must match in order for the call to be successful."
					},
					"response": []
				}
			],
			"_postman_id": "3784b9e8-95f6-5479-b4c2-f608c84be679",
			"description": "A tag library is compiled into a build in order for it to be assigned to an environment for testing and deployment. The contents of a build varies depending on the resources included in the library, the configuration of the environment to which the build is assigned, and the platform of the property that the build belongs to."
		},
		{
			"name": "Rules",
			"item": [
				{
					"name": "Look up a rule by ID.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "7ddec436-91e2-5e85-8876-02d59a51f40f",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/rules/:RULE_ID",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"rules",
								":RULE_ID"
							],
							"variable": [
								{
									"value": "{{RULE_ID}}",
									"id": "RULE_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update or revise a rule by ID.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "ac062ea4-7529-5367-8502-fbb972655637",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://reactor.adobe.io/rules/:RULE_ID",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"rules",
								":RULE_ID"
							],
							"variable": [
								{
									"value": "{{RULE_ID}}",
									"id": "RULE_ID"
								}
							]
						},
						"description": "**Note**:\n\nRevising a rule creates a new revision of the rule which is assigned its own ID. The original rule may be discovered via the origin link. Revising a rule is achieved by supplying a `meta` attribute containing an `action` property with the value `revise` (`\"action\": \"revise\"`). Excluding this property will update the current revision of the rule without creating a new one.\n\nWhen updating or revising a rule, its ID must be provided in both the request path and the request payload, as shown in the example below. These IDs must match in order for the call to be successful.\n\nAttributes to be updated must be included in the `attributes` object in the payload. Editable attributes for a rule include the following:\n* `enabled`\n\n* `name`"
					},
					"response": []
				},
				{
					"name": "Delete a rule by ID.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "e30fbb57-c409-5b74-8592-7bd9a27eb0e9",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/rules/:RULE_ID",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"rules",
								":RULE_ID"
							],
							"variable": [
								{
									"value": "{{RULE_ID}}",
									"id": "RULE_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve a list of rule components that comprise a specific rule.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "53472349-b2f6-5022-b477-1cb0189a0a86",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/rules/:RULE_ID/rule_components?created_at={{created_at}}&updated_at={{updated_at}}&dirty={{dirty}}&enabled={{enabled}}&name={{name}}&negate={{negate}}&origin_id={{origin_id}}&published={{published}}&published_at={{published_at}}&revision_number={{revision_number}}",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"rules",
								":RULE_ID",
								"rule_components"
							],
							"query": [
								{
									"key": "created_at",
									"value": "{{created_at}}"
								},
								{
									"key": "updated_at",
									"value": "{{updated_at}}"
								},
								{
									"key": "dirty",
									"value": "{{dirty}}"
								},
								{
									"key": "enabled",
									"value": "{{enabled}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "negate",
									"value": "{{negate}}"
								},
								{
									"key": "origin_id",
									"value": "{{origin_id}}"
								},
								{
									"key": "published",
									"value": "{{published}}"
								},
								{
									"key": "published_at",
									"value": "{{published_at}}"
								},
								{
									"key": "revision_number",
									"value": "{{revision_number}}"
								}
							],
							"variable": [
								{
									"value": "{{RULE_ID}}",
									"id": "RULE_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new rule component for a specific rule.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "0df2ac9c-9fac-5d75-aed6-f948e58b3d86",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://reactor.adobe.io/rules/:RULE_ID/rule_components",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"rules",
								":RULE_ID",
								"rule_components"
							],
							"variable": [
								{
									"value": "{{RULE_ID}}",
									"id": "RULE_ID"
								}
							]
						},
						"description": "**Note**: For details on the required and optional payload properties for this endpoint, refer to the [Reactor API guide](https://developer.adobelaunch.com/api/reference/1.0/rule_components/create/)."
					},
					"response": []
				},
				{
					"name": "Retrieve a list of libraries that use a specific rule.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "c50ad97e-9a52-5c1b-8c01-c79cd6103621",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/rules/:RULE_ID/libraries",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"rules",
								":RULE_ID",
								"libraries"
							],
							"variable": [
								{
									"value": "{{RULE_ID}}",
									"id": "RULE_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Look up the property that owns a specific rule.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "6e0d9235-3279-5636-be1d-7d3cd9632d20",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/rules/:RULE_ID/property",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"rules",
								":RULE_ID",
								"property"
							],
							"variable": [
								{
									"value": "{{RULE_ID}}",
									"id": "RULE_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Look up the related origin for a specific rule.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "7d77e886-1a32-5ddd-8602-24bbf4f8c6f3",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/rules/:RULE_ID/origin",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"rules",
								":RULE_ID",
								"origin"
							],
							"variable": [
								{
									"value": "{{RULE_ID}}",
									"id": "RULE_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve a list of revisions for a specific rule.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "27867397-54df-5d5a-9fd9-19f8391dbe39",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/rules/:RULE_ID/revisions",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"rules",
								":RULE_ID",
								"revisions"
							],
							"variable": [
								{
									"value": "{{RULE_ID}}",
									"id": "RULE_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve a list of notes attached to the various rule components of a specific rule.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "fa7255f7-16c2-54bf-a1d6-8283e3afb847",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/rules/:RULE_ID/rule_component_notes?created_at={{created_at}}&updated_at={{updated_at}}&text={{text}}",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"rules",
								":RULE_ID",
								"rule_component_notes"
							],
							"query": [
								{
									"key": "created_at",
									"value": "{{created_at}}"
								},
								{
									"key": "updated_at",
									"value": "{{updated_at}}"
								},
								{
									"key": "text",
									"value": "{{text}}"
								}
							],
							"variable": [
								{
									"value": "{{RULE_ID}}",
									"id": "RULE_ID"
								}
							]
						},
						"description": "**Note**: Notes attached directly to the rule itself are not included in results for this endpoint."
					},
					"response": []
				},
				{
					"name": "Retrieve a list of notes attached to a specific rule.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "c1ef449d-312e-525b-a1b6-32dab0958e68",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/rules/:RULE_ID/notes?created_at={{created_at}}&updated_at={{updated_at}}&text={{text}}",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"rules",
								":RULE_ID",
								"notes"
							],
							"query": [
								{
									"key": "created_at",
									"value": "{{created_at}}"
								},
								{
									"key": "updated_at",
									"value": "{{updated_at}}"
								},
								{
									"key": "text",
									"value": "{{text}}"
								}
							],
							"variable": [
								{
									"value": "{{RULE_ID}}",
									"id": "RULE_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a note for a rule.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "6ea145cd-bc3b-5597-9fda-f17e2bff68a7",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://reactor.adobe.io/rules/:RULE_ID/notes",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"rules",
								":RULE_ID",
								"notes"
							],
							"variable": [
								{
									"value": "{{RULE_ID}}",
									"id": "RULE_ID"
								}
							]
						}
					},
					"response": []
				}
			],
			"_postman_id": "c145a5e2-2dda-562f-95c2-2e3bb4f751cc",
			"description": "Rules control the behavior of the resources contained in a deployed library. A rule is a group of one or more rule components, and exists to tie the rule components together in a logical way."
		},
		{
			"name": "Rule components",
			"item": [
				{
					"name": "Look up a rule component by ID.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "d88026bf-8dde-5512-9629-40200940f810",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/rule_components/:RULE_COMPONENT_ID",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"rule_components",
								":RULE_COMPONENT_ID"
							],
							"variable": [
								{
									"value": "{{RULE_COMPONENT_ID}}",
									"id": "RULE_COMPONENT_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a rule component by ID.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "108599f0-7ac8-5259-8c4c-d1bb4fd94bfc",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://reactor.adobe.io/rule_components/:RULE_COMPONENT_ID",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"rule_components",
								":RULE_COMPONENT_ID"
							],
							"variable": [
								{
									"value": "{{RULE_COMPONENT_ID}}",
									"id": "RULE_COMPONENT_ID"
								}
							]
						},
						"description": "**Note**:\n\nUpdating a rule component will also update the parent rule's `updated_at` timestamp.\n\nWhen updating a rule component, its ID must be provided in both the request path and the request payload, as shown in the example below. These IDs must match in order for the call to be successful.\n\nThe following attributes can be updated for an existing rule component:\n* `delay_next`\n\n* `delegate_descriptor_id`\n\n* `extension_id`\n\n* `name`\n\n* `negate`\n\n* `order`\n\n* `rule_order`\n\n* `settings`\n\n* `timeout`"
					},
					"response": []
				},
				{
					"name": "Delete a rule component by ID.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "dd51b3ab-255f-5cf9-85a4-d4c4b8eecba9",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/rule_components/:RULE_COMPONENT_ID",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"rule_components",
								":RULE_COMPONENT_ID"
							],
							"variable": [
								{
									"value": "{{RULE_COMPONENT_ID}}",
									"id": "RULE_COMPONENT_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Look up the extension that provides a specific rule component.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "613e0d99-48ee-57b5-98ad-9ec138b34b31",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/rule_components/:RULE_COMPONENT_ID/extension?created_at={{created_at}}&updated_at={{updated_at}}&text={{text}}",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"rule_components",
								":RULE_COMPONENT_ID",
								"extension"
							],
							"query": [
								{
									"key": "created_at",
									"value": "{{created_at}}"
								},
								{
									"key": "updated_at",
									"value": "{{updated_at}}"
								},
								{
									"key": "text",
									"value": "{{text}}"
								}
							],
							"variable": [
								{
									"value": "{{RULE_COMPONENT_ID}}",
									"id": "RULE_COMPONENT_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Look up the origin of a specific rule component.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "08989956-38f0-591d-8afb-50ee25ab405a",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/rule_components/:RULE_COMPONENT_ID/origin?created_at={{created_at}}&updated_at={{updated_at}}&text={{text}}",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"rule_components",
								":RULE_COMPONENT_ID",
								"origin"
							],
							"query": [
								{
									"key": "created_at",
									"value": "{{created_at}}"
								},
								{
									"key": "updated_at",
									"value": "{{updated_at}}"
								},
								{
									"key": "text",
									"value": "{{text}}"
								}
							],
							"variable": [
								{
									"value": "{{RULE_COMPONENT_ID}}",
									"id": "RULE_COMPONENT_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve a list of rules that are related to a specific rule component.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "6b7e02b5-32e7-584a-ade9-467db69f3bfa",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/rule_components/:RULE_COMPONENT_ID/rules?created_at={{created_at}}&updated_at={{updated_at}}&text={{text}}",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"rule_components",
								":RULE_COMPONENT_ID",
								"rules"
							],
							"query": [
								{
									"key": "created_at",
									"value": "{{created_at}}"
								},
								{
									"key": "updated_at",
									"value": "{{updated_at}}"
								},
								{
									"key": "text",
									"value": "{{text}}"
								}
							],
							"variable": [
								{
									"value": "{{RULE_COMPONENT_ID}}",
									"id": "RULE_COMPONENT_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve a list of notes attached to a specific rule component.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "add665d9-b29b-5a05-96c2-bee087a60e74",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/rule_components/:RULE_COMPONENT_ID/notes?created_at={{created_at}}&updated_at={{updated_at}}&text={{text}}",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"rule_components",
								":RULE_COMPONENT_ID",
								"notes"
							],
							"query": [
								{
									"key": "created_at",
									"value": "{{created_at}}"
								},
								{
									"key": "updated_at",
									"value": "{{updated_at}}"
								},
								{
									"key": "text",
									"value": "{{text}}"
								}
							],
							"variable": [
								{
									"value": "{{RULE_COMPONENT_ID}}",
									"id": "RULE_COMPONENT_ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a note for a rule component.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "b1619c96-d134-5c52-95c0-ee3a232c946e",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://reactor.adobe.io/rule_components/:RULE_COMPONENT_ID/notes",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"rule_components",
								":RULE_COMPONENT_ID",
								"notes"
							],
							"variable": [
								{
									"value": "{{RULE_COMPONENT_ID}}",
									"id": "RULE_COMPONENT_ID"
								}
							]
						}
					},
					"response": []
				}
			],
			"_postman_id": "e0955fa6-5509-5096-9952-b9e9c40d4564",
			"description": "Rule components are the individual items that make up a rule. Rule components have three basic types: events (what triggers a rule), conditions (what the rule checks to determine an action), and actions (what the rule executes depending on whether the condition is met). A rule component must belong to exactly one rule."
		},
		{
			"name": "Notes",
			"item": [
				{
					"name": "Look up a note by ID.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "7ef5cc5d-45ab-5830-a4eb-f717fd8632f7",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/notes/:NOTE_ID",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"notes",
								":NOTE_ID"
							],
							"variable": [
								{
									"value": "{{NOTE_ID}}",
									"id": "NOTE_ID"
								}
							]
						}
					},
					"response": []
				}
			],
			"_postman_id": "bc8d8294-fd05-5433-9689-869253e1249f",
			"description": "Notes are textual annotations that you can add to certain tag resources, such as data elements, extensions, libraries, properties, rules, and rule components."
		},
		{
			"name": "Audit events",
			"item": [
				{
					"name": "Retrieve a list of audit events.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "8339d140-12f2-5b1d-adf8-e13a7e0e247e",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/audit_events?created_at={{created_at}}&updated_at={{updated_at}}&type_of={{type_of}}",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"audit_events"
							],
							"query": [
								{
									"key": "created_at",
									"value": "{{created_at}}"
								},
								{
									"key": "updated_at",
									"value": "{{updated_at}}"
								},
								{
									"key": "type_of",
									"value": "{{type_of}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Look up an audit event by ID.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "11bf42d9-5029-52f9-ba3d-b416992b4688",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/audit_events/:EVENT_ID",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"audit_events",
								":EVENT_ID"
							],
							"variable": [
								{
									"value": "{{EVENT_ID}}",
									"id": "EVENT_ID"
								}
							]
						}
					},
					"response": []
				}
			],
			"_postman_id": "aa580c7f-5e61-5d12-9958-9f55c86a8dfa",
			"description": "An audit event is a record of a specific change to another tag resource, generated at the time the change is made. These are system events which can be subscribed to through the use of a callback function."
		},
		{
			"name": "Profiles",
			"item": [
				{
					"name": "Look up the details of the currently logged-in user.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "d250b179-ff55-52d0-ace1-44259b7ee9c6",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "Accept",
								"value": "{{Accept}}",
								"description": "All GET requests must include this header, with the value of \"application/vnd.api+json;revision=#\" (where \"#\" is the revision number of the resource you want to retrieve, e.g. \"1\").",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://reactor.adobe.io/profile",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"profile"
							]
						}
					},
					"response": []
				}
			],
			"_postman_id": "a6a585ec-958f-508a-9e88-7bd84dcd4a5b",
			"description": "A profile represents a tags user. Platform does not maintain its own database of users and permissions, it instead relies on Adobe IDs managed by Adobe’s company-wide Identity Management System (IMS). A profile contains all the information about the logged-in user, including all the Adobe Orgs to which they belong, the product profiles they belong to within each Org, and the rights they have from each product profile."
		},
		{
			"name": "Search",
			"item": [
				{
					"name": "Perform a search.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "fd8da6ca-df9a-5278-9a81-578f1bdc24b5",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json;revision=1"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with \"Bearer \". For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://reactor.adobe.io/search",
							"protocol": "https",
							"host": [
								"reactor",
								"adobe",
								"io"
							],
							"path": [
								"search"
							]
						},
						"description": "**Note**: The payload of a search request must contain a `query` object. This query object must contain at least one property whose key is a dot-notation path to the attribute being queried (e.g. `attributes.name`). For detailed information on how to construct a search payload, see the [search endpoint guide](https://developer.adobelaunch.com/api/reference/1.0/search/perform/)."
					},
					"response": []
				}
			],
			"_postman_id": "c77d0354-2eee-5e25-824d-7708c1ad3ebf",
			"description": "The search endpoint provides a way to find resources matching a desired criteria, expressed as a query. All queries are scoped to your current company and accessible properties."
		}
	]
}